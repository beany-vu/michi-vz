"use strict";(self.webpackChunkmichi_vz=self.webpackChunkmichi_vz||[]).push([[48],{"./node_modules/use-deep-compare-effect/dist/use-deep-compare-effect.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Ay:()=>useDeepCompareEffect});var react=__webpack_require__("./node_modules/react/index.js"),has=Object.prototype.hasOwnProperty;function find(iter,tar,key){for(key of iter.keys())if(dequal(key,tar))return key}function dequal(foo,bar){var ctor,len,tmp;if(foo===bar)return!0;if(foo&&bar&&(ctor=foo.constructor)===bar.constructor){if(ctor===Date)return foo.getTime()===bar.getTime();if(ctor===RegExp)return foo.toString()===bar.toString();if(ctor===Array){if((len=foo.length)===bar.length)for(;len--&&dequal(foo[len],bar[len]););return-1===len}if(ctor===Set){if(foo.size!==bar.size)return!1;for(len of foo){if((tmp=len)&&"object"==typeof tmp&&!(tmp=find(bar,tmp)))return!1;if(!bar.has(tmp))return!1}return!0}if(ctor===Map){if(foo.size!==bar.size)return!1;for(len of foo){if((tmp=len[0])&&"object"==typeof tmp&&!(tmp=find(bar,tmp)))return!1;if(!dequal(len[1],bar.get(tmp)))return!1}return!0}if(ctor===ArrayBuffer)foo=new Uint8Array(foo),bar=new Uint8Array(bar);else if(ctor===DataView){if((len=foo.byteLength)===bar.byteLength)for(;len--&&foo.getInt8(len)===bar.getInt8(len););return-1===len}if(ArrayBuffer.isView(foo)){if((len=foo.byteLength)===bar.byteLength)for(;len--&&foo[len]===bar[len];);return-1===len}if(!ctor||"object"==typeof foo){for(ctor in len=0,foo){if(has.call(foo,ctor)&&++len&&!has.call(bar,ctor))return!1;if(!(ctor in bar)||!dequal(foo[ctor],bar[ctor]))return!1}return Object.keys(bar).length===len}}return foo!=foo&&bar!=bar}function useDeepCompareMemoize(value){var ref=react.useRef(value),signalRef=react.useRef(0);return dequal(value,ref.current)||(ref.current=value,signalRef.current+=1),react.useMemo((function(){return ref.current}),[signalRef.current])}function useDeepCompareEffect(callback,dependencies){return react.useEffect(callback,useDeepCompareMemoize(dependencies))}},"./src/components/shared/YaxisBand.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),d3__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/d3/src/index.js"),YaxisBand=function YaxisBand(_ref){var yScale=_ref.yScale,width=_ref.width,margin=_ref.margin,yAxisFormat=_ref.yAxisFormat,showGrid=_ref.showGrid,ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),renderedRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),axisGenerator=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){return d3__WEBPACK_IMPORTED_MODULE_1__.axisLeft(yScale).tickFormat((function(d){return yAxisFormat?yAxisFormat(d):d})).tickSize(0)}),[yScale,yAxisFormat]),gridWidth=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((function(){return width-margin.left-margin.right}),[width,margin]),updateAxis=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((function(){if(ref.current){var g=d3__WEBPACK_IMPORTED_MODULE_1__.select(ref.current);g.selectAll("*").remove(),g.attr("class","y-axis").attr("transform","translate("+margin.left+",0)").call(axisGenerator),g.select(".domain").remove(),g.selectAll(".tick line").remove(),g.selectAll(".tick *").remove(),g.selectAll(".tick-line").remove(),g.selectAll(".tick").append("foreignObject").attr("class","tick-html").attr("x",-100).attr("y",-10).attr("width",100).attr("height",20).html((function(d){return'<div style="display:flex;align-items:center;height:100%" title="'.concat(d,'"><span>').concat(d,"</span></div>")})),g.selectAll(".tick").append("line").attr("class","tick-line").attr("x1",0).attr("x2",gridWidth).attr("y1",0).attr("y2",0).style("stroke-dasharray","1.5").style("stroke",showGrid?"lightgray":"transparent")}}),[axisGenerator,margin.left,showGrid,gridWidth]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)((function(){if(!renderedRef.current){if(ref.current)d3__WEBPACK_IMPORTED_MODULE_1__.select(ref.current).selectAll(".tick").attr("opacity",0).transition().duration(500).attr("opacity",1);renderedRef.current=!0}updateAxis()}),[updateAxis]),react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{ref})};const __WEBPACK_DEFAULT_EXPORT__=react__WEBPACK_IMPORTED_MODULE_0__.memo(YaxisBand);YaxisBand.__docgenInfo={description:"",methods:[],displayName:"YaxisBand",props:{yScale:{required:!0,tsType:{name:"ScaleBand",elements:[{name:"string"}],raw:"ScaleBand<string>"},description:""},width:{required:!0,tsType:{name:"number"},description:""},margin:{required:!0,tsType:{name:"signature",type:"object",raw:"{ top: number; right: number; bottom: number; left: number }",signature:{properties:[{key:"top",value:{name:"number",required:!0}},{key:"right",value:{name:"number",required:!0}},{key:"bottom",value:{name:"number",required:!0}},{key:"left",value:{name:"number",required:!0}}]}},description:""},yAxisFormat:{required:!1,tsType:{name:"signature",type:"function",raw:"(d: number | string) => string",signature:{arguments:[{type:{name:"union",raw:"number | string",elements:[{name:"number"},{name:"string"}]},name:"d"}],return:{name:"string"}}},description:""},showGrid:{required:!1,tsType:{name:"boolean"},description:""}}}},"./stories/DualHorizontalBarChart.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_components_DualHorizontalBarChart__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/DualHorizontalBarChart.tsx"),_src_components_MichiVzProvider__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/MichiVzProvider.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Charts/Dual Horizontal Bar Chart",component:_src_components_DualHorizontalBarChart__WEBPACK_IMPORTED_MODULE_1__.A,tags:["autodocs"],decorators:[function(Story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src_components_MichiVzProvider__WEBPACK_IMPORTED_MODULE_2__._,{colorsMapping:{Africa:"red",Euro:"purple",Asia:"orange",Australia:"green","North America":"blue"},colorsBasedMapping:{Africa:"yellow",Euro:"navy",Asia:"violet",Australia:"darkgreen","North America":"grey"},highlightItems:["Euro"]},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))}]};var Primary={args:{dataSet:[{label:"Africa",color:"blue",value1:400,value2:200},{label:"Asia",color:"blue",value1:350,value2:200},{label:"Australia",color:"blue",value1:null,value2:180},{label:"Euro",color:"blue",value1:180,value2:500},{label:"North America",color:"blue",value1:null,value2:null}],width:900,height:400,margin:{top:50,right:50,bottom:50,left:50},showCombined:!1,xAisFormat:function xAisFormat(d){return"".concat(d)},yAxisFormat:function yAxisFormat(d){return"".concat(d)},title:"My Comparable Vertical Bar Chart",tooltipFormatter:function tooltipFormatter(d){return JSON.stringify(d)},children:react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient",{id:"gradient1",x1:"0%",y1:"0%",x2:"100%",y2:"0%"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop",{offset:"0%",stopColor:"red"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop",{offset:"100%",stopColor:"blue"})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient",{id:"gradient2",x1:"0%",y1:"0%",x2:"100%",y2:"0%"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop",{offset:"0%",stopColor:"red"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop",{offset:"100%",stopColor:"pink"})))}};const __namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    dataSet: [{\n      label: "Africa",\n      color: "blue",\n      value1: 400,\n      value2: 200\n    }, {\n      label: "Asia",\n      color: "blue",\n      value1: 350,\n      value2: 200\n    }, {\n      label: "Australia",\n      color: "blue",\n      value1: null,\n      value2: 180\n    }, {\n      label: "Euro",\n      color: "blue",\n      value1: 180,\n      value2: 500\n    }, {\n      label: "North America",\n      color: "blue",\n      value1: null,\n      value2: null\n    }],\n    width: 900,\n    height: 400,\n    margin: {\n      top: 50,\n      right: 50,\n      bottom: 50,\n      left: 50\n    },\n    showCombined: false,\n    xAisFormat: d => `${d}`,\n    // Example: format values as percentages\n    yAxisFormat: d => `${d}`,\n    // Example: format values as percentages\n    title: "My Comparable Vertical Bar Chart",\n    tooltipFormatter: (d: any) => {\n      return JSON.stringify(d);\n    },\n    children: <defs>\r\n        <linearGradient id="gradient1" x1="0%" y1="0%" x2="100%" y2="0%">\r\n          <stop offset="0%" stopColor="red" />\r\n          <stop offset="100%" stopColor="blue" />\r\n        </linearGradient>\r\n\r\n        <linearGradient id="gradient2" x1="0%" y1="0%" x2="100%" y2="0%">\r\n          <stop offset="0%" stopColor="red" />\r\n          <stop offset="100%" stopColor="pink" />\r\n        </linearGradient>\r\n      </defs>\n  }\n}',...Primary.parameters?.docs?.source}}}}}]);